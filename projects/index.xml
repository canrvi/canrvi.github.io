<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Charlie</title>
    <link>https://canrvi.github.io/projects/</link>
    <description>Recent content in Projects on Charlie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2021-2022.</copyright>
    <lastBuildDate>Sun, 06 Mar 2022 21:26:37 +0800</lastBuildDate><atom:link href="https://canrvi.github.io/projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>💎 Densign System</title>
      <link>https://canrvi.github.io/projects/densign-system/</link>
      <pubDate>Tue, 08 Feb 2022 14:43:01 +0800</pubDate>
      
      <guid>https://canrvi.github.io/projects/densign-system/</guid>
      <description>“设计体系”是指服务于数字化产品设计的一系列具有内在关联性的、组织有序的设计模式与实践方法。其中，“模式”指代任何可复用的界面组成要素，包括按钮、文本框、图标、配色、字体，以及可复用的功能流程与交互行为等等；“实践”则是关于如何在设计团队当中创建、提炼、使用和共享这些模式。——《Design Systems》
设计背景 “设计体系”是指服务于数字化产品设计的一系列具有内在关联性的、组织有序的设计模式与实践方法。近些年，国内外许多产品设计团队早已在内部完成了设计系统的建立，也有了不少经验和沉淀。低代码、开源协同的浪潮兴起，设计体系再次被推到风口浪尖。由此我们也意识到，也需要有一套符合自身业务需要的的设计体系，来帮助我们正确、有效、且高效地协同运作。
存在问题   团队缺乏完整的设计规范指导，产品经理与设计师对体验设计理解存在一定的偏差，造成设计不合理、体验不一致等问题，给用户带来较高的学习成本。
  随着公司业务快速增长，产品设计的复杂性不断增加，业务模块的激增，不仅产生了大量的冗余功能代码和设计资源，带来的还有重复性的设计工作。
  设计师与开发缺少共同协作的流程机制，随着产品的快速迭代和团队成员的变动，团队内部的协作效率低效，当有新的业务需求时，无法实现快速落地。
  设计目标 提升设计产研协作效率，提升产品设计一致性，提升设计价值以及团队设计影响力。如何解决 1.建立设计协作 我在团队内部初拟了一份《产品设计协作规范》，用于工作流程上的约束。设计文档的有效管理，能够在多人协作的团队中能够起到很大的提效作用。从设计文档的命名方式，到文档结构，再到最终的设计交付流程，都纳入了协作规则。目的是让大家形成良好的规范意识，不仅要在设计团队内部形成共识，也需要同步到产品、研发、测试等跨部门协作团队，减少信息不对称所造成的沟通阻碍。
2.定义设计语言 &amp;ldquo;&amp;hellip;一个群体，像是共享着同一个头脑，通过遵从相同的模式化语言来协同作业，最终使那些宏伟的建筑拔地而起。&amp;rdquo; 这是《建筑的永恒之道》作者Christopher Alexander 在书中所提到的：&amp;ldquo;关于如何基于’模式化语言‘来创造令人愉悦、适宜居住的建筑环境。&amp;rdquo;
在数字化产品设计中也同样如此，从页面到模块都是以不同颗粒度的元素进行拼凑组合而来，为了保证产品设计的整体性和一致性，需要有一套大家都能达成共识并且理解的工作语言，这也是设计体系中必要的组成部分。我们通过“原子设计“的概念，先后从移动端以及管理后台开始，与产品团队基于业务场景进行多次分析和讨论，经过不断的打磨和设计迭代，完成了一套拥有550+组件、90+样式，以及覆盖页面达 30+ 的设计组件库。同时，协同研发同学，完成小程序组件库的代码开发。
依据业务上的特性，产品需要为众多开发商提供搭建页面的服务，为满足开发商不同的品牌需求，我们通过过往经验的积累，提取出了8个颜色作为主色调，并基于HSB色彩模型延展出48个衍生色作为我们的基础色板。
未完待续&amp;hellip;</description>
    </item>
    
    <item>
      <title>🔫 PickMe MiniProgram</title>
      <link>https://canrvi.github.io/projects/pickme/</link>
      <pubDate>Wed, 02 Mar 2022 00:06:14 +0800</pubDate>
      
      <guid>https://canrvi.github.io/projects/pickme/</guid>
      <description></description>
    </item>
    
    <item>
      <title>⚖️ Design Principle</title>
      <link>https://canrvi.github.io/projects/principle/</link>
      <pubDate>Fri, 12 Nov 2021 14:43:01 +0800</pubDate>
      
      <guid>https://canrvi.github.io/projects/principle/</guid>
      <description>设计模式 我们通过特定的设计模式来提供状态反馈，向用户呈现任务步骤，为他们提供操作选项，或是帮助他们与彼此互动；我们通过特定的设计模式来营造具有吸引力与鼓励性的氛围，使任务更易于完成，给用户带来成就感与控制感。
设计模式包括功能性模式与感知性模式。前者体现为有形的界面组件，包括按钮、页头、表单控件、菜单等等；后者表现在那些能够表达产品气质的描述性视觉元素当中，包括配色、字体、图标、图形与动效等等。
设计语言 设计语言会伴随着设计过程而逐渐成型。我们并不总是能够精准地把握一门设计语言的定义与规则；从你有意识地对设计语言进行定义的时候起，它就开始成为某种可以执行与复用的标准，你也会逐渐习惯于体系化的设计思维模式。当你们需要界面当中的某个元素更加突出时，无需花费时间讨论争执，直接参考模式库便好。经过明确定义的设计语言还会有助于你更加体系化地控制整个产品的设计方案。</description>
    </item>
    
    <item>
      <title>🌟Lighthouse</title>
      <link>https://canrvi.github.io/projects/lighthouse/</link>
      <pubDate>Sun, 06 Mar 2022 21:26:37 +0800</pubDate>
      
      <guid>https://canrvi.github.io/projects/lighthouse/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>

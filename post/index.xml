<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Charlie</title>
    <link>https://canrvi.github.io/post/</link>
    <description>Recent content in Posts on Charlie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright © 2021-2022.</copyright>
    <lastBuildDate>Tue, 08 Feb 2022 14:43:01 +0800</lastBuildDate><atom:link href="https://canrvi.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Densign System</title>
      <link>https://canrvi.github.io/post/design/</link>
      <pubDate>Tue, 08 Feb 2022 14:43:01 +0800</pubDate>
      
      <guid>https://canrvi.github.io/post/design/</guid>
      <description>设计背景 随着业务快速增长，产品设计的复杂性不断增加，客户以及产品使用者对产品体验的一致性要求越发突出，为了整个产品设计团队能够专注于产品问题并发挥其各自的优势来构建更好的产品。产品设计团队需要建立一套完整的设计体系来帮助我们正确、有效、且高效地协同运作。
存在问题  产品在视觉和交互上都缺乏一套完整的定义和规则，产品团队与设计团队对设计理解存在一定的偏差，造成产品在设计落地时出现设计不合理、体验不一致等问题。 产品设计中存在很多类似的页面及组件，需要提炼稳定且高复用性的内容，减少重复性的设计工作。 设计师与开发缺少共同协作的管理机制，随着产品的快速迭代和团队成员的变动，团队内部的协作效率低效，当有新的业务需求时，无法实现快速落地。  如何解决 团队在进入实际工作流程之前，需要有统一的工作语言进行讨论、评审和确认。工作语言的应用范围涉及方方面面，从上层的需求概念描述，到日常设计决策讨论中的表达方式，都需要规则来约束。于是我们从设计团队内部发起，自下而上的，开始建立协作规则、设计资产以及组件库。
一.协作规则 首先着手进行的是协作规则的定义。初拟了一份「产品设计协作规范」文档，用于团队内部的指导性建议，其中包括以下多项内容：
设计文档的有效管理，能够在多人协作的团队中能够起到很大的提效作用。设计文档的命名方式不仅要在设计师内部形成共识，也需要同步到产品、研发、市场等跨部门团队。
命名规则等的定义好了之后，我们还要对文档的使用方式达成一致。于是还制定了设计文件的交付规范以及组件库的更新机制。
“设计体系”是指服务于数字化产品设计的一系列具有内在关联性的、组织有序的设计模式与实践方法。其中，“模式”指代任何可复用的界面组成要素，包括按钮、文本框、图标、配色、字体，以及可复用的功能流程与交互行为等等；“实践”则是关于如何在设计团队当中创建、提炼、使用和共享这些模式。——《Design Systems》
未完待续&amp;hellip;</description>
    </item>
    
    <item>
      <title>Principle</title>
      <link>https://canrvi.github.io/post/principle/</link>
      <pubDate>Fri, 12 Nov 2021 14:43:01 +0800</pubDate>
      
      <guid>https://canrvi.github.io/post/principle/</guid>
      <description>设计模式 我们通过特定的设计模式来提供状态反馈，向用户呈现任务步骤，为他们提供操作选项，或是帮助他们与彼此互动；我们通过特定的设计模式来营造具有吸引力与鼓励性的氛围，使任务更易于完成，给用户带来成就感与控制感。
设计模式包括功能性模式与感知性模式。前者体现为有形的界面组件，包括按钮、页头、表单控件、菜单等等；后者表现在那些能够表达产品气质的描述性视觉元素当中，包括配色、字体、图标、图形与动效等等。
设计语言 设计语言会伴随着设计过程而逐渐成型。我们并不总是能够精准地把握一门设计语言的定义与规则；从你有意识地对设计语言进行定义的时候起，它就开始成为某种可以执行与复用的标准，你也会逐渐习惯于体系化的设计思维模式。当你们需要界面当中的某个元素更加突出时，无需花费时间讨论争执，直接参考模式库便好。经过明确定义的设计语言还会有助于你更加体系化地控制整个产品的设计方案。</description>
    </item>
    
    <item>
      <title>A Product Designer’s checklist 😰 ✅</title>
      <link>https://canrvi.github.io/post/produc-checklist/</link>
      <pubDate>Fri, 12 Nov 2021 14:43:01 +0800</pubDate>
      
      <guid>https://canrvi.github.io/post/produc-checklist/</guid>
      <description>If you’ve ever listened to any of the ZeroToDesign podcasts, you would have heard me drone on about the fact that there are so many different responsibilities for an end-to-end Product Designer (aka Jack of all trades), from Product Strategy and Problem Discovery, right through to Developer collaboration and product testing.
 💡 Contributing to such a variety of tasks makes it easy to forget some of your design process along the way</description>
    </item>
    
    <item>
      <title>Design systems are flawed</title>
      <link>https://canrvi.github.io/post/design-systems-are-flawed/</link>
      <pubDate>Fri, 12 Nov 2021 14:43:01 +0800</pubDate>
      
      <guid>https://canrvi.github.io/post/design-systems-are-flawed/</guid>
      <description>Design systems are flawed 3 actions to get the most out of design systems Back in the spring of 2021, the CCP (Clube Criativos Portugal) invited me to talk about design systems. At the time I wasn’t focused on design systems, but I decided to accept the invitation anyway. I thought that I could still speak to my own experience, as someone designing a new product and referencing one of the most well-known design systems around: Shopify Polaris.</description>
    </item>
    
  </channel>
</rss>
